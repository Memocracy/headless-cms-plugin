<?php

declare(strict_types=1);

namespace RealHero\Memocracy\Components;

use RealHero\Memocracy\Core\Component;
use RealHero\Memocracy\Core\Hook;

/**
 * Component for dispatching deployment.
 *
 * @package     wp-modern-plugin-boilerplate
 * @subpackage  core
 * @version     1.0.0
 * @author      Konrad Fedorczyk <contact@realhe.ro>
 */
class DeployDispatcher extends Component
{
    const ENV_KEYS = ["DISPATCH_URL", "DISPATCH_TOKEN", "EVENT_TYPE"];

    private function dispatchDeploy()
    {
        foreach (self::ENV_KEYS as $key) {
            if (empty($_ENV[$key])) {
                throw new \Exception("{$key} option is missing in .env file");
            }
        }

        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, $_ENV['DISPATCH_URL']);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, "{\"event_type\": \"{$_ENV['EVENT_TYPE']}\"}");

        $headers = array();
        $headers[] = 'Accept: application/vnd.github.v3+json';
        $headers[] = "Authorization: token {$_ENV['DISPATCH_TOKEN']}";
        $headers[] = 'Content-Type: application/x-www-form-urlencoded';
        $headers[] = 'user-agent: Wordpress';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);

        if (curl_errno($ch)) {
            throw new \Exception('Error:' . curl_error($ch));
        }

        curl_close($ch);
        return $result;
    }

    public function ajaxDispatchDeploy()
    {
        if (current_user_can('edit_posts')) {
            try {
                $array_result = [
                    'OK' => true,
                    'msg' => $this->dispatchDeploy()
                ];
            } catch (\Exception $e) {
                $array_result = [
                    'OK' => false,
                    'msg' => $e->getMessage()
                ];
            }
        } else {
            $array_result = [
                'OK' => false,
                'msg' => "unauthorized request"
            ];
        }

        wp_send_json($array_result);
        wp_die();
    }

    public function addPublishButton($admin_bar)
    {
        $admin_bar->add_menu([
            'id' => 'publish-changes',
            'title' => 'Publish all changes',
            'href' => '#'
        ]);
    }

    public function addPublishModal()
    {
        echo "
            <div id='deploy-modal' style='display:none;'>
                <div class='deploy-modal-contents'>
                    <div class='icon'>
                        <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'><path d='M15.91 13.34l2.636-4.026-.454-.406-3.673 3.099c-.675-.138-1.402.068-1.894.618-.736.823-.665 2.088.159 2.824.824.736 2.088.665 2.824-.159.492-.55.615-1.295.402-1.95zm-3.91-10.646v-2.694h4v2.694c-1.439-.243-2.592-.238-4 0zm8.851 2.064l1.407-1.407 1.414 1.414-1.321 1.321c-.462-.484-.964-.927-1.5-1.328zm-18.851 4.242h8v2h-8v-2zm-2 4h8v2h-8v-2zm3 4h7v2h-7v-2zm21-3c0 5.523-4.477 10-10 10-2.79 0-5.3-1.155-7.111-3h3.28c1.138.631 2.439 1 3.831 1 4.411 0 8-3.589 8-8s-3.589-8-8-8c-1.392 0-2.693.369-3.831 1h-3.28c1.811-1.845 4.321-3 7.111-3 5.523 0 10 4.477 10 10z'/></svg>
                    </div>
                    <p>
                        Published changes will appear after few minutes (3 to 5). Please wait patiently. Thanks!
                        <br>(You can close this modal now)
                    </p>
                </div>
            </div>
        ";
    }

    public function addThickBoxAssets()
    {
        add_thickbox();
    }

    /**
     * @inheritdoc
     */
    protected function init()
    {

        $addPublishButtonHook = new Hook(
            'admin_bar_menu',
            $this,
            'addPublishButton',
            200
        );

        $ajaxDispatchDeployHook = new Hook(
            'wp_ajax_dispatch_deploy',
            $this,
            'ajaxDispatchDeploy'
        );

        $adminFooterHook = new Hook(
            'admin_footer',
            $this,
            'addPublishModal'
        );

        $initHook = new Hook(
            'init',
            $this,
            'addThickBoxAssets'
        );

        $this->hooks->addAction($addPublishButtonHook);
        $this->hooks->addAction($ajaxDispatchDeployHook);
        $this->hooks->addAction($adminFooterHook);
        $this->hooks->addAction($initHook);
    }
}
